Analyzing file 'funla/test/t11.fun'...

Constraint Set
----------------------------------
{$3} >= {$10}
{$2} >= {$2}
{$2} >= {$5}
{$7} >= {$7}
{$8} >= {$1}
{$3} >= {$13}
{$8} >= {$4}
----------------------------------
Input program:

let a = fn x => fn x2 => x2 x in
let b = fn y => fn y2 => y2 y in
let g = fn z => z 1 in
(g a) (fn u => u + 1) + (g b) (fn w => w - 1)

----------------------------------
Annotated program:

let a = fn$1 x => fn$2 x2 => x2 x in 
let b = fn$4 y => fn$5 y2 => y2 y in 
let g = fn$7 z => z 1 in 
(g a) (fn$10 u => u + 1) + (g b) (fn$13 w => w - 1)

----------------------------------
Annotated typed program:

let [a:Int-$(8)->((Int-$(3)->Int)-$(2)->Int)] = fn$1 [x:Int] => fn$2 [x2:Int-$(3)->Int] => x2 x in 
let [b:Int-$(8)->((Int-$(3)->Int)-$(2)->Int)] = fn$4 [y:Int] => fn$5 [y2:Int-$(3)->Int] => y2 y in 
let [g:(Int-$(8)->((Int-$(3)->Int)-$(2)->Int))-$(7)->((Int-$(3)->Int)-$(2)->Int)] = fn$7 [z:Int-$(8)->((Int-$(3)->Int)-$(2)->Int)] => z 1 in 
(g a) (fn$10 [u:Int] => u + 1) + (g b) (fn$13 [w:Int] => w - 1)

----------------------------------
Detail type information:

  a : Int-$(8)->((Int-$(3)->Int)-$(2)->Int)
  b : Int-$(8)->((Int-$(3)->Int)-$(2)->Int)
  fn$1 : Int-$(8)->((Int-$(3)->Int)-$(2)->Int)
  fn$10 : Int-$(3)->Int
  fn$13 : Int-$(3)->Int
  fn$2 : (Int-$(3)->Int)-$(2)->Int
  fn$4 : Int-$(8)->((Int-$(3)->Int)-$(2)->Int)
  fn$5 : (Int-$(3)->Int)-$(2)->Int
  fn$7 : (Int-$(8)->((Int-$(3)->Int)-$(2)->Int))-$(7)->((Int-$(3)->Int)-$(2)->Int)
  g : (Int-$(8)->((Int-$(3)->Int)-$(2)->Int))-$(7)->((Int-$(3)->Int)-$(2)->Int)
  u : Int
  w : Int
  x : Int
  x2 : Int-$(3)->Int
  y : Int
  y2 : Int-$(3)->Int
  z : Int-$(8)->((Int-$(3)->Int)-$(2)->Int)

